" MIT License
" 
" Copyright (c) 2018 cgsdfc
" 
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.

" vim:ft=vim
"
" Test object#filter()
"

Execute(Truthness is eval'ed by object#bool());
let samples = [
      \ [ [ 1, 2, [] ], [1,2] ],
      \ [ [ '', 1, 2 ], [1,2] ],
      \ [ [ {}, 1, 2 ], [1,2] ],
      \]

for [input, output] in samples
  AssertEqual object#filter(input, 'v:val'), output
  AssertEqual object#filter(input), output
endfor


Execute(Can do what builtin-filter() can do);
let input = range(10)
let lambda = 'and(v:val, 1)'
" Get the odd item from input
AssertEqual object#filter(input, lambda), filter(input, lambda)


Execute(Can filter string);
" Create a string of 10 chars from [01]
let str = join(map(range(10), 'and(1, v:val)?"0":"1"'),'')
" Filter out the '0's.
AssertEqual object#filter(str, 'v:val is# "1"'), map(range(5), '"1"')
