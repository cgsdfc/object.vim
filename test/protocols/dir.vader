" MIT License
" 
" Copyright (c) 2018 cgsdfc
" 
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.

" vim: ft=vim
" Test dir()
"
Execute(Only accept Dict);
let input = [
      \ 1,
      \ 'str',
      \ [],
      \ ]

for x in input
  AssertThrows call object#dir(g:x)
  Assert g:vader_exception =~# 'WrongType'
endfor

Execute(Return keys() for ordinary Dict);
let x = {
      \ 'root': '/path/to/somewhere/',
      \ 'has_permisson': 'true',
      \ 'last_access': '/path/to/somefile',
      \ 'refcnt': 10,
      \ }

AssertEqual keys(x), object#dir(x), 'if the Dict has no __dir__(), use key()'


Execute(hooks into __dir__());
let cls = {
      \ 'x': []
      \ }
function! cls.__dir__()
  return self.x
endfunction

AssertEqual [], object#dir(cls)
