"
" Test getattr()
"

Execute(getattr() gets an attribute that exists);
let foo = { 'name': 'foo' }
AssertEqual object#getattr(foo, 'name'), 'foo'

"XXX: Since the Undefined Sam problem, when testing the throw, we use _literals_ instead
Execute(getattr() throws AttributeError when the attribute does not exist);
AssertThrows call object#getattr({ 'age': 11 }, 'name')
Assert g:vader_exception =~# 'AttributeError'

Execute(getattr() returns default when no attribute found and default is given);
let bar = { 'name' : 'bar' }
AssertEqual object#getattr(bar, 'age', 11), 11
AssertEqual object#getattr(bar, 'friends', []), []

Execute(getattr() throws WrongType when some of its required arguments are not of correct type);
AssertThrows call object#getattr(1, 'name')
Assert g:vader_exception =~# 'ERROR(WrongType)'

AssertThrows call object#getattr({}, [])
Assert g:vader_exception =~# 'ERROR(WrongType)'

AssertThrows call object#getattr(1, [])
Assert g:vader_exception =~# 'ERROR(WrongType)'

Execute(getattr() can hook into __getattr__());
let cls = {}
function! cls.__getattr__(name)
  return '__getattr__() says ' . a:name
endfunction

let attr = object#getattr(cls, 'boy')
AssertEqual '__getattr__() says boy', attr
