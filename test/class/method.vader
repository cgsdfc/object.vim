" MIT License
" 
" Copyright (c) 2018 cgsdfc
" 
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.

" vim: ft=vim
" Test methods extraction
" A method is an attribute of type Funcref.

Before;
let X = object#class('X')
" Copied from class.vim
let special_attrs = ['__class__', '__base__', '__name__', '__bases__', '__mro__']

Execute (Special attributes not considered as methods);
let methods = object#class#methods(X)
for x in special_attrs
  Assert !has_key(methods, x)
endfor

Execute(Non-Funcref not considered as methods);
let non_methods = { 'x': 1, 'y': 'y', 'z': [], }
AssertEqual object#class#methods(non_methods), {}

Execute(Throws ValueError if the name isn't identifier);
let bad = { '$x': function('empty') }
AssertThrows call object#class#methods(g:bad)
Log g:vader_exception
Assert g:vader_exception =~# 'ValueError'
