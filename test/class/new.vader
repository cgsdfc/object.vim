" MIT License
" 
" Copyright (c) 2018 cgsdfc
" 
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.

" vim:ft=vim

" Test new()
"
Before;
let X = object#class('X')

Execute(New cls can be instantiated with new() with default __init__ and __repr__);
let x = object#new(X)
Assert x.__class__ is# X
AssertEqual object#repr(x), "<X object>"

Execute(Hook into __init__ and __repr__);
function! X.__init__(name, size)
  let name = maktaba#ensure#IsString(a:name)
  let size = maktaba#ensure#IsNumber(a:size)
  let self.name = name
  let self.size = size
endfunction

function! X.__repr__()
  return printf('X(name=%s, size=%d)', self.name, self.size)
endfunction

let x = object#new(X, 'var', 4)
AssertEqual x.name, 'var'
AssertEqual x.size, 4
Assert object#repr(x) is# 'X(name=var, size=4)'

AssertThrows call object#new(g:X, 1, 4)
Assert g:vader_exception =~# 'WrongType'

Execute(Throws TypeError if arg0 is not a class);
AssertThrows call object#new(1)
Assert g:vader_exception =~# 'TypeError'
