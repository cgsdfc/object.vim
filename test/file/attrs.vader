" vim:ft=vim
" Test basic attribute getting and setting

Before;
let private_attrs = object#file#patterns()[-1]
let files = map(range(5), 'tempname()')
call map(copy(files), 'writefile([], v:val)')

"
" Hiding private attributes
"

Execute(private attributes not showing up);
let f = object#open(files[0])
for x in object#dir(f)
  Assert x !~# private_attrs
endfor

Execute(setattr() on file object should throw AttributeError);
let f = object#open(files[0])
AssertThrows call object#setattr(g:f, 'x', 1)
Log g:vader_exception
Assert g:vader_exception =~# 'AttributeError.*no attribute'

for x in object#dir(f)
  AssertThrows call object#setattr(g:f, g:x, 1)
  Assert g:vader_exception =~# 'AttributeError.*readonly'
endfor

"
" Initial attributes right after open()'ed
"

Execute(open() without mode default for reading);
let f = object#open(files[0])
AssertEqual f.mode, 'r'
AssertEqual files[0], f.name
Assert !f.closed
Log object#repr(f)

Execute(open() with mode string should create file with that mode);
let modes = [ 'r', 'w', 'a', 'r+', 'rw' ]
Assert len(modes) <= len(files)

for x in range(len(files))
  let f = object#open(files[x], modes[x])
  AssertEqual f.name, files[x]
  AssertEqual f.mode, modes[x]
  Assert !f.closed
  Log object#repr(f)
endfor

After;
call map(files, 'delete(v:val)')
