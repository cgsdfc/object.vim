" MIT License
" 
" Copyright (c) 2018 cgsdfc
" 
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.

" vim: ft=vim
" Test open for reading and writing at the same time.

Before;
let file = tempname()
let content = 'this is a lower case string'
call writefile([content], file)


Execute(Read+Write);
let f = object#open(file, 'rw')
Assert f.readable() && f.writable()
AssertEqual f.read(), content

let content = toupper(content)
call f.write(content)
call f.flush()
AssertEqual readfile(file)[0], content


Execute(Read+Append);
let f = object#open(file, 'ra')
Assert f.readable() && f.writable()

call f.writeline(f.read())
call f.close()

AssertEqual readfile(file), [content, content]


Execute(Append);
" Open for appending.
let f = object#open(file, 'a')
Assert f.writable()

call f.writeline(content)
call f.close()

AssertEqual readfile(file), [content, content]


After;
call delete(file)
