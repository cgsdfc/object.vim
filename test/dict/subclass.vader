" MIT License
" 
" Copyright (c) 2018 cgsdfc
" 
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.

" vim: ft=vim
" Subclassing dict class
Before;
let dict = object#dict_()
let MyDict = object#class('MyDict', dict)

function! MyDict.__init__(...)
  call call(object#super(g:MyDict, self).__init__, a:000)
endfunction


Execute(__missing__ returns);
function! MyDict.__missing__(Key)
  return a:Key
endfunction

let x = object#new(MyDict)
AssertEqual object#getitem(x, 'foo'), 'foo'
Assert !x.has_key('foo')


Execute(__missing__ throws);
function! MyDict.__missing__(Key)
  throw object#Exception('')
endfunction

let x = object#new(MyDict)
AssertThrows call object#getitem(g:x, 'foo')
Assert g:vader_exception =~# 'Exception'

Execute(No __missing__);
let x = object#new(MyDict)
AssertThrows call object#getitem(g:x, 'foo')
Assert g:vader_exception =~# 'KeyError'
