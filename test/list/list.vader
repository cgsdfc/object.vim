" MIT License
" 
" Copyright (c) 2018 cgsdfc
" 
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.

" vim:ft=vim
"
" Test the list()
"

Execute(when no arguments given, list() returns an empty list);
AssertEqual object#list(), []
AssertEqual object#list([]), []

Execute(list() can turn different iterable into newly created lists);
let input = [
      \ [ range(10), range(10) ],
      \ [ repeat('a', 10), split(repeat('a ', 10), ' ') ],
      \]

for [iterable, list] in input
  let x = object#list(iterable)
  AssertEqual x, list
  Assert x isnot# list
endfor


Execute(list() throws TypeError if more than 1 args is given);
AssertThrows call object#list([],[])
Assert g:vader_exception =~# 'TypeError'


Execute(list() throws TypeError if a:1 is not iterable);
" The major test is done in iter()
AssertThrows call object#list(1)
Assert g:vader_exception =~# 'TypeError'


Execute(list() corner cases);
AssertEqual object#list(''), []
