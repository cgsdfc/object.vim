" MIT License
" 
" Copyright (c) 2018 cgsdfc
" 
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.

" vim:ft=vim
"
" Test the hashing for String.

"
" Test strhash_sha256() and strhash_djb2()
"
Before;
" Fetch the dummy text as test input

let basename = maktaba#path#Basename(g:vader_file)
Log basename
if basename is# 'strhash.vader'
  let test_dir = fnamemodify(g:vader_file, ':h:h')
else
  let test_dir = fnamemodify(g:vader_file, ':h')
endif

let lipsum_path = maktaba#path#Join([test_dir, 'data', 'lipsum.txt'])
Assert filereadable(lipsum_path)
let input = map(readfile(lipsum_path), 'split(v:val)')

"
" strhash_sha256()
"
Execute(strhash_sha256() should always return non-negative nr);
for line in input
  for word in line
    let hash = object#mapping#strhash_sha256(word)
    Assert hash >= 0
  endfor
endfor

Execute(strhash_sha256() should be equal if the input values are equal);
for line in input
  for word in line
    let x = object#mapping#strhash_sha256(word)
    let y = object#mapping#strhash_sha256(word)
    AssertEqual x, y, 'strhash_sha256() should be a function!'
  endfor
endfor

"
" strhash_djb2()
"
Execute(strhash_djb2() should always return non-negative nr);
for line in input
  for word in line
    let hash =object#mapping#strhash_djb2(word)
    Assert hash >= 0
  endfor
endfor

Execute(strhash_djb2() should be equal if the input values are equal);
for line in input
  for word in line
    let x = object#mapping#strhash_djb2(word)
    let y = object#mapping#strhash_djb2(word)
    AssertEqual x, y, 'strhash_djb2() should be a function!'
  endfor
endfor
