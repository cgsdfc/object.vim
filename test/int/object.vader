" MIT License
" 
" Copyright (c) 2018 cgsdfc
" 
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
" 
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
" 
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.

" vim: ft=vim
" Test the int object
Before;
let int = object#int_()

Execute(Class data);
Log int.INT_MAX
Log int.INT_MIN
Log int.INT_WIDTH


Execute(The int type);
Log object#repr(int)
let MyInt = object#class('MyInt', int)
function! MyInt.__init__(...)
  Log object#repr(object#type(self))
  call call(object#super(g:MyInt, self).__init__, a:000)
endfunction

let var = object#new(MyInt, '0b11', 2)
AssertEqual object#int(var), 3


Execute(Create an int object);
let i = object#_int('2')
Assert object#isinstance(i, int)
AssertEqual i.real, 2
AssertEqual i.imag, 0
AssertEqual i.denominator, 1
AssertEqual i.numerator, 2

" Protocols of int object
Execute(__bool__);
AssertEqual 0, object#bool(object#_int(0))
AssertEqual 1, object#bool(object#_int(2))


Execute(Compatible with Number);
for i in range(-10, 10)
  let obj = object#_int(i)
  AssertEqual i, object#int(obj)
  AssertEqual object#abs(i), object#abs(obj)
  AssertEqual object#hash(i), object#hash(obj)
endfor


Execute(__str__ and __repr__);
for i in range(-10, 10)
  let obj = object#_int(i)
  AssertEqual object#str(obj), string(i)
  AssertEqual object#repr(obj), string(i)
endfor
